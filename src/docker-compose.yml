version: '3'

services:
    express:
        depends_on:
            - reverseproxy
        build:
            context: express
        image: express-server
        environment:
            - APIKEY=${APIKEY} 
        container_name: express-server-container
        ports:
            - "3000:3000"
        volumes:
            - /app/node_modules 
            - ./express:/app
            - /tmp/mnt:/app/InputOutput  
        networks:
            - backend
    elasticsearch:
        container_name: elasticsearch
        hostname: elasticsearch
        image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"
        environment:
            - cluster.name=es-cluster
            - node.name=es-node-1
            - path.data=/tmp/mnt/elastic/data
            - http.port=9200
            - http.host=0.0.0.0
            - transport.host=127.0.0.1
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ${ES_MOUNT_DRIVE}:/usr/share/elasticsearch/data
        ports:
            - '9200:9200'
        networks:
            - 'elk_stack'
        healthcheck:
            test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:${ES_PASSWORD}", "http://localhost:9200/_cat/health"]
    fluentd:
        build:
            context: fluentd
        image: fluentd-with-elastic
        container_name: fluentd
        ports:
            - "24224:24224"
        networks:
            - elk_stack
        depends_on:  
            - "elasticsearch"
        volumes:
            - ./fluentd/etc:/fluentd/etc
            
    reverseproxy:
        build: nginx
        image: nginx-server
        container_name: nginx-server-container
        ports:
            - 2345:8080
        restart: always
        logging:
            driver: fluentd  
            options:
                fluentd-address: localhost:24224
                tag: httpd.access
        depends_on:  
            - "fluentd" 
        networks:
            - backend
                  
    configure_stack:
        container_name: configure_stack
        image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
        environment:
            - 'ELASTIC_VERSION=${ELASTIC_VERSION}'
            - 'ES_PASSWORD=${ES_PASSWORD}'
            - 'ES_DEFAULT_INDEX_PATTERN=${ES_DEFAULT_INDEX_PATTERN}'
        volumes:
            - './init/configure-stack.sh:/usr/local/bin/configure-stack.sh:ro'
        command: ['/bin/bash', '-c', 'cat /usr/local/bin/configure-stack.sh | tr -d "\r" | bash']
        networks:
            - 'elk_stack'
        depends_on:
            - 'elasticsearch'
        
networks:
    backend:
        driver: "bridge"
    elk_stack:
        driver: bridge
        ipam:
            driver: default
            config:
            - subnet: 192.168.1.0/24
volumes:
    express:
        driver: 'local'
  
